@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Bitwellforge Brand Colors - Premium Black & Yellow */
    --brand-black: 0 0% 4%;           /* #0A0A0A */
    --brand-surface: 0 0% 7%;         /* #111111 */
    --brand-white: 0 0% 100%;         /* #FFFFFF */
    --brand-muted: 210 4% 62%;        /* #9AA0A6 */
    --brand-yellow: 45 100% 70%;      /* #FFD766 */
    --brand-yellow-soft: 45 100% 77%; /* #FFE58A */
    
    /* Semantic Tokens */
    --background: var(--brand-white);
    --foreground: var(--brand-black);
    
    --card: var(--brand-white);
    --card-foreground: var(--brand-black);
    
    --popover: var(--brand-white);
    --popover-foreground: var(--brand-black);
    
    --primary: var(--brand-black);
    --primary-foreground: var(--brand-white);
    
    --secondary: var(--brand-yellow);
    --secondary-foreground: var(--brand-black);
    
    --muted: 0 0% 96%;
    --muted-foreground: var(--brand-muted);
    
    --accent: var(--brand-yellow-soft);
    --accent-foreground: var(--brand-black);
    
    --destructive: 0 84% 60%;
    --destructive-foreground: var(--brand-white);
    
    --border: 0 0% 90%;
    --input: 0 0% 90%;
    --ring: var(--brand-yellow);
    
    --radius: 14px;
    
    /* Premium Gradients */
    --gradient-hero: radial-gradient(circle at 50% 30%, hsl(var(--brand-yellow) / 0.22) 0%, transparent 60%);
    --gradient-cta: linear-gradient(135deg, hsl(var(--brand-black)) 0%, hsl(0 0% 10%) 100%);
    
    /* Shadows */
    --shadow-yellow: 0 8px 22px hsl(var(--brand-yellow) / 0.35);
    --shadow-card: 0 10px 28px hsl(var(--brand-yellow) / 0.18);
    --shadow-text: 0 2px 6px rgba(0, 0, 0, 0.6);
    
    /* Typography */
    --font-base: 'Inter', system-ui, -apple-system, sans-serif;
    --font-display: 'Playfair Display', Georgia, serif;
    --text-max-width: 72ch;
    
    /* Timing */
    --transition-smooth: all 0.3s cubic-bezier(0.25, 1, 0.5, 1);
    --transition-enter: 550ms cubic-bezier(0.25, 1, 0.5, 1);
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
    font-family: var(--font-base);
    letter-spacing: 0.2px;
  }
  
  html {
    scroll-behavior: smooth;
  }
  
  h1, h2, h3, h4, h5, h6 {
    line-height: 1.15;
    font-weight: 700;
    font-family: var(--font-display);
  }
  
  p {
    line-height: 1.65;
    max-width: var(--text-max-width);
  }
}

@layer utilities {
  .text-display {
    font-size: clamp(40px, 6vw, 84px);
    line-height: 1.15;
    font-weight: 700;
  }
  
  .text-heading {
    font-size: clamp(28px, 4vw, 48px);
    line-height: 1.15;
    font-weight: 700;
  }
  
  .text-subheading {
    font-size: clamp(20px, 2.6vw, 28px);
    line-height: 1.3;
    font-weight: 600;
  }
  
  .text-body {
    font-size: clamp(15px, 1.3vw, 18px);
    line-height: 1.65;
  }
  
  .section-spacing {
    padding-top: min(12vh, 120px);
    padding-bottom: min(12vh, 120px);
  }
  
  .section-spacing-compact {
    padding-top: 72px;
    padding-bottom: 72px;
  }
  
  .container-custom {
    max-width: 1200px;
    margin-left: auto;
    margin-right: auto;
    padding-left: 24px;
    padding-right: 24px;
  }
  
  .card-hover {
    transition: var(--transition-smooth);
  }
  
  .card-hover:hover {
    transform: translateY(-2px) rotateX(2deg);
    box-shadow: var(--shadow-card);
  }
  
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(22px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  @keyframes scaleIn {
    from {
      opacity: 0;
      transform: scale(0.98);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }
  
  @keyframes spin {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(180deg);
    }
  }
  
  @keyframes float {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-10px);
    }
  }
  
  @keyframes slideInLeft {
    from {
      opacity: 0;
      transform: translateX(-40px) rotateY(-15deg);
    }
    to {
      opacity: 1;
      transform: translateX(0) rotateY(0deg);
    }
  }
  
  @keyframes slideInRight {
    from {
      opacity: 0;
      transform: translateX(40px) rotateY(15deg);
    }
    to {
      opacity: 1;
      transform: translateX(0) rotateY(0deg);
    }
  }
  
  @keyframes pulseGlow {
    0%, 100% {
      opacity: 0.5;
      transform: scale(1);
    }
    50% {
      opacity: 0.8;
      transform: scale(1.05);
    }
  }
  
  @keyframes rotateIn {
    from {
      opacity: 0;
      transform: rotate(-10deg) scale(0.9);
    }
    to {
      opacity: 1;
      transform: rotate(0deg) scale(1);
    }
  }
  
  .animate-fade-in-up {
    animation: fadeInUp 520ms cubic-bezier(0.25, 1, 0.5, 1) forwards;
  }
  
  .animate-scale-in {
    animation: scaleIn var(--transition-enter) forwards;
  }
  
  .animate-float {
    animation: float 3s ease-in-out infinite;
  }
  
  .animate-slide-in-left {
    animation: slideInLeft 600ms cubic-bezier(0.25, 1, 0.5, 1) forwards;
  }
  
  .animate-slide-in-right {
    animation: slideInRight 600ms cubic-bezier(0.25, 1, 0.5, 1) forwards;
  }
  
  .animate-pulse-glow {
    animation: pulseGlow 2s ease-in-out infinite;
  }
  
  .animate-rotate-in {
    animation: rotateIn 700ms cubic-bezier(0.34, 1.56, 0.64, 1) forwards;
  }
  
  .glass {
    background: rgba(255, 255, 255, 0.03);
    backdrop-filter: blur(20px);
    -webkit-backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.08);
  }
  
  .glass-white {
    background: rgba(255, 255, 255, 0.85);
    backdrop-filter: blur(20px);
    -webkit-backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.2);
  }
  
  @media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
    }
  }
}
